# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1v4U9glnF4yksbykA2UvCZ7afM-Mu27gw
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd

df=pd.read_csv('Mall_Customers.csv')

df

df.isnull().sum()

df.describe()

df.dtypes

plt.hist(df['Age'],bins = 100)
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.title('Age Distribution')
plt.show()

plt.hist(df['Annual Income (k$)'],bins = 100)
plt.xlabel('Annual Income')
plt.ylabel('Frequency')
plt.title('Income Distribution')
plt.show()

plt.hist(df['Spending Score (1-100)'],bins = 100)
plt.xlabel('Spending')
plt.ylabel('Frequency')
plt.title('Spending Distribution')
plt.show()

labels = ['Female', 'Male']
size = df['Gender'].value_counts()
colors = ['blue', 'orange']
plt.pie(size,colors = colors,labels = labels,shadow = True,autopct = '%.2f%%')
plt.title('Gender')
plt.legend()
plt.show()

sns.pairplot(df)
plt.title('Pairplot for the Data', fontsize = 15)
plt.show()

plt.figure(figsize=(15,6))
plt.subplot(1,2,1)
sns.boxplot(y=df["Spending Score (1-100)"], color="red")
plt.subplot(1,2,2)
sns.boxplot(y=df["Annual Income (k$)"])
plt.show()

fig, ax = plt.subplots(figsize=(12,5)) 
sns.heatmap(df.corr(), annot=True,linewidths=0,ax=ax).set_title('Correlation Factors Heat Map', size='15')

df_dropped = df.drop(['CustomerID'], axis=1)
df_dropped.head()

df_dropped = pd.get_dummies(df_dropped, prefix=['Gender'])

df_dropped

df_dropped_corr = df_dropped.corr()

sns.heatmap(df_dropped_corr, cmap="YlGnBu")

from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
df_scaled = pd.DataFrame(scaler.fit_transform(df_dropped), columns = df_dropped.columns)
df_scaled.head()

df_scaled.describe()

df_dropped.describe()

from sklearn.cluster import KMeans

wcss = []
for k in range(1,11):
    kmeans = KMeans(n_clusters=k, init="k-means++")
    kmeans.fit(df_dropped)
    wcss.append(kmeans.inertia_)
plt.figure(figsize=(12,6))    
plt.grid()
plt.plot(range(1,11),wcss, linewidth=2, color="blue", marker ="8")
plt.xlabel("K Value")
plt.xticks(np.arange(1,11,1))
plt.ylabel("CSS")
plt.show()

km = KMeans(n_clusters=5)
clusters = km.fit_predict(df_dropped)

df_dropped["label"] = clusters
fig = plt.figure(figsize=(20,10))
ax = fig.add_subplot(111, projection='3d')
ax.scatter(df_dropped.Age[df_dropped.label == 0], df_dropped["Annual Income (k$)"][df_dropped.label == 0], df_dropped["Spending Score (1-100)"][df_dropped.label == 0], c='blue', s=60)
ax.scatter(df_dropped.Age[df_dropped.label == 1], df_dropped["Annual Income (k$)"][df_dropped.label == 1], df_dropped["Spending Score (1-100)"][df_dropped.label == 1], c='red', s=60)
ax.scatter(df_dropped.Age[df_dropped.label == 2], df_dropped["Annual Income (k$)"][df_dropped.label == 2], df_dropped["Spending Score (1-100)"][df_dropped.label == 2], c='green', s=60)
ax.scatter(df_dropped.Age[df_dropped.label == 3], df_dropped["Annual Income (k$)"][df_dropped.label == 3], df_dropped["Spending Score (1-100)"][df_dropped.label == 3], c='orange', s=60)
ax.scatter(df_dropped.Age[df_dropped.label == 4], df_dropped["Annual Income (k$)"][df_dropped.label == 4], df_dropped["Spending Score (1-100)"][df_dropped.label == 4], c='purple', s=60)
ax.view_init(30, 185)
plt.xlabel("Age")
plt.ylabel("Annual Income (k$)")
ax.set_zlabel('Spending Score (1-100)')
plt.show()

df_clusters = pd.DataFrame(df_scaled,columns=['Age', 'Annual Income (k$)',
       'Spending Score (1-100)'])
df_clusters['Cluster'] = kmeans.labels_
df_clusters.head()

df_clusters.groupby('Cluster').count()['Spending Score (1-100)']

from sklearn.metrics import confusion_matrix,classification_report
print(confusion_matrix(df_clusters['Cluster'],kmeans.labels_))
print(classification_report(df_clusters['Cluster'],kmeans.labels_))

